<?php

declare(strict_types=1);

namespace BitWasp\Test\Bitcoind\Config;

use BitWasp\Bitcoind\Config\Config;
use BitWasp\Bitcoind\Config\FilesystemLoader;
use BitWasp\Bitcoind\Config\FilesystemWriter;
use BitWasp\Test\Bitcoind\TestCase;
use Matomo\Ini\IniReader;

class FilesystemTest extends TestCase
{
    /**
     * @var FilesystemLoader
     */
    private $loader;

    /**
     * @var FilesystemWriter
     */
    private $writer;

    public function setUp()
    {
        $this->loader = new FilesystemLoader(new IniReader());
        $this->writer = new FilesystemWriter();
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testReadAndWrite()
    {
        $filename = $this->registerTmpFile("test-fs-create-and-read.conf");
        $this->assertFileNotExists($filename);

        $config = new Config([
            'rpcuser' => 'username',
            'rpcpassword' => 'username',
            'rpcallowip' => '1',
        ]);

        $this->writer->create($filename, $config);
        $again = $this->loader->load($filename);

        $this->assertEquals($config->all(), $again->all());
    }

    public function testSaveAndRead()
    {
        $filename = $this->registerTmpFile("test-fs-save-and-read.conf");
        $this->assertFileNotExists($filename);

        $config = new Config([
            'rpcuser' => 'username',
            'rpcpassword' => 'username',
            'rpcallowip' => '1',
        ]);

        $this->writer->create($filename, $config);
        $again = $this->loader->load($filename);

        $this->assertEquals($config->all(), $again->all());
    }
}
